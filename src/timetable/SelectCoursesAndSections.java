/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timetable;

import java.time.LocalTime;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Hammad
 */
public class SelectCoursesAndSections extends javax.swing.JFrame {

    /**
     * Creates new form GenerateTimetable
     */
    Student ST;
    int ind1 = 0;
    int ind2 = 0;
    int ind3 = 0;
    int ind4 = 0;
    int ind5 = 0;
    boolean flag1 = false;
    boolean flag2 = false;
    boolean flag3 = false;
    boolean flag4 = false;
    boolean flag5 = false;
    String s1_ = "";
    String s2_ = "";
    String s3_ = "";
    String s4_ = "";
    String s5_ = "";
    LocalTime t1;
    LocalTime t2;
    LocalTime t3;
    LocalTime t4;
    LocalTime t5;
    LocalTime t1e;
    LocalTime t2e;
    LocalTime t3e;
    LocalTime t4e;
    LocalTime t5e;
    String d1 = "";
    String d2 = "";
    String d3 = "";
    String d4 = "";
    String d5 = "";

    ArrayList<String> c_ = new ArrayList<String>();

    public final int findIndInCourseList(String name) {
        for (int i = 0; i < ST.getDept().getCourseList().size(); i++) {
            if (ST.getDept().getCourseList().get(i).getName().equals(name)) {
                return i;
            }
        }
        return -1;
    }

    public final void fillCList() {
        cList.removeAllItems();
        cList.addItem("Select Course 1");
        for (int i = 0; i < ST.getDept().getCourseList().size(); i++) {
            cList.addItem(ST.getDept().getCourseList().get(i).getName());
        }

    }

    public final void fillCList1() {
        cList1.removeAllItems();
        cList1.addItem("Select Course 2");
        for (int i = 0; i < ST.getDept().getCourseList().size(); i++) {
            cList1.addItem(ST.getDept().getCourseList().get(i).getName());
        }
    }

    public final void fillCList2() {
        cList2.removeAllItems();
        cList2.addItem("Select Course 3");
        for (int i = 0; i < ST.getDept().getCourseList().size(); i++) {
            cList2.addItem(ST.getDept().getCourseList().get(i).getName());
        }
    }

    public final void fillCList3() {
        cList3.removeAllItems();
        cList3.addItem("Select Course 4");
        for (int i = 0; i < ST.getDept().getCourseList().size(); i++) {
            cList3.addItem(ST.getDept().getCourseList().get(i).getName());
        }
    }

    public final void fillCList4() {
        cList4.removeAllItems();
        cList4.addItem("Select Course 5");
        for (int i = 0; i < ST.getDept().getCourseList().size(); i++) {
            cList4.addItem(ST.getDept().getCourseList().get(i).getName());
        }
    }

    public final Boolean checkForSameCourse(String s) {
        for (int i = 0; i < c_.size(); i++) {
            if (c_.get(i).equals(s)) {
                return true;
            }
        }

        return false;
    }

    public final void removeCourse_(String s) {
        for (int i = 0; i < c_.size(); i++) {
            if (c_.get(i).equals(s)) {
                c_.remove(s);
            }
        }
    }

    public SelectCoursesAndSections(Student st) {
        initComponents();
        ST = st;
        fillCList();
        fillCList1();
        fillCList2();
        fillCList3();
        fillCList4();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cList = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        timing = new javax.swing.JLabel();
        day = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        venue = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        sList = new javax.swing.JComboBox<>();
        cCode = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cList1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        timing1 = new javax.swing.JLabel();
        day1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        venue1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        sList1 = new javax.swing.JComboBox<>();
        cCode1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cList2 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        timing2 = new javax.swing.JLabel();
        day2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        venue2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        sList2 = new javax.swing.JComboBox<>();
        cCode2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cList3 = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        timing3 = new javax.swing.JLabel();
        day3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        venue3 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        sList3 = new javax.swing.JComboBox<>();
        cCode3 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cList4 = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        timing4 = new javax.swing.JLabel();
        day4 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        venue4 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        sList4 = new javax.swing.JComboBox<>();
        cCode4 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        cList.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Course 1" }));
        cList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cListMouseReleased(evt);
            }
        });
        cList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cListActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel2.setText("Timing:");

        timing.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        timing.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        day.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        day.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel5.setText("Day:");

        venue.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        venue.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel7.setText("Venue:");

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton6.setText("Generate Timetable");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        sList.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        sList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Section" }));
        sList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sListMouseReleased(evt);
            }
        });
        sList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sListActionPerformed(evt);
            }
        });

        cCode.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        cCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 28)); // NOI18N
        jLabel1.setText("Select Courses and Sections");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel3.setText("Course code:");

        cList1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cList1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Course 2" }));
        cList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cList1MouseReleased(evt);
            }
        });
        cList1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cList1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel4.setText("Timing:");

        timing1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        timing1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        day1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        day1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel6.setText("Day:");

        venue1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        venue1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel8.setText("Venue:");

        sList1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        sList1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Section" }));
        sList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sList1MouseReleased(evt);
            }
        });
        sList1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sList1ActionPerformed(evt);
            }
        });

        cCode1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        cCode1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel9.setText("Course code:");

        cList2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cList2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Course 3" }));
        cList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cList2MouseReleased(evt);
            }
        });
        cList2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cList2ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel10.setText("Timing:");

        timing2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        timing2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        day2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        day2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel11.setText("Day:");

        venue2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        venue2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel12.setText("Venue:");

        sList2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        sList2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Section" }));
        sList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sList2MouseReleased(evt);
            }
        });
        sList2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sList2ActionPerformed(evt);
            }
        });

        cCode2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        cCode2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel13.setText("Course code:");

        cList3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cList3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Course 4" }));
        cList3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cList3MouseReleased(evt);
            }
        });
        cList3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cList3ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel14.setText("Timing:");

        timing3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        timing3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        day3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        day3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel15.setText("Day:");

        venue3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        venue3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel16.setText("Venue:");

        sList3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        sList3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Section" }));
        sList3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sList3MouseReleased(evt);
            }
        });
        sList3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sList3ActionPerformed(evt);
            }
        });

        cCode3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        cCode3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel17.setText("Course code:");

        cList4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cList4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Course 5" }));
        cList4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cList4MouseReleased(evt);
            }
        });
        cList4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cList4ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel18.setText("Timing:");

        timing4.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        timing4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        day4.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        day4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel19.setText("Day:");

        venue4.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        venue4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel20.setText("Venue:");

        sList4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        sList4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Section" }));
        sList4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sList4MouseReleased(evt);
            }
        });
        sList4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sList4ActionPerformed(evt);
            }
        });

        cCode4.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        cCode4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel21.setText("Course code:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cCode1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cList1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sList1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel4))))
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(venue1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(day1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timing1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cList, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(sList, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cCode, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(398, 398, 398)
                                .addComponent(jLabel5))
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(venue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(day, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timing, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cCode2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cList2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sList2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel10))))
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(venue2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(day2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timing2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cCode3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cList3, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel15)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sList3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel14))))
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(venue3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(day3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timing3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cCode4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cList4, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel19)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sList4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel18))))
                            .addComponent(jLabel20))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(venue4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(day4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timing4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(114, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(202, 202, 202))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addGap(294, 294, 294))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(cCode, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timing, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(sList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(venue, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cList1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(cCode1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timing1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(sList1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(day1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(venue1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cList2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(cCode2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timing2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(sList2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(day2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(venue2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cList3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(cCode3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timing3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(sList3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(day3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(venue3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cList4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(cCode4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timing4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(sList4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel18)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(day4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(venue4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addGap(35, 35, 35))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cListMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cListMouseReleased

    private void cListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cListActionPerformed
        // TODO add your handling code here:
        if (cList.getSelectedItem() != null) {
            if (checkForSameCourse(cList.getSelectedItem().toString()) && !s1_.equals(cList.getSelectedItem().toString())) {
                JOptionPane.showMessageDialog(null, "You have selected two same courses");
            } else {
                if (cList.getSelectedItem() != null) {
                    if (cList.getSelectedItem().toString().equals("Select Course 1")) {
                        flag1 = false;
                        sList.removeAllItems();
                        sList.addItem("Select Section");
                        cCode.setText(" ");
                        removeCourse_(s1_);
                        s1_ = "";
                    }
                    if (!cList.getSelectedItem().toString().equals("Select Course 1")) {
                        if (!checkForSameCourse(cList.getSelectedItem().toString()) && !flag1) {
                            flag1 = true;
                            s1_ = cList.getSelectedItem().toString();
                            c_.add(cList.getSelectedItem().toString());
                            int ind = findIndInCourseList(cList.getSelectedItem().toString());
                            ind1 = ind;
                            cCode.setText(ST.getDept().getCourseList().get(ind).getCode());

                            for (int i = 0; i < ST.getDept().getCourseList().get(ind).getSectionList().size(); i++) {
                                sList.addItem(ST.getDept().getCourseList().get(ind).getSectionList().get(i).getName());
                            }
                        } else if (flag1 == true) {
                            if (!checkForSameCourse(cList.getSelectedItem().toString()) && !s1_.equals(cList.getSelectedItem().toString())) {
                                //JOptionPane.showMessageDialog(null, "You have selected two same courses");
                                sList.removeAllItems();
                                sList.addItem("Select Section");
                                cCode.setText(" ");
                                removeCourse_(s1_);
                                c_.add(cList.getSelectedItem().toString());
                                s1_ = cList.getSelectedItem().toString();
                                int ind = findIndInCourseList(cList.getSelectedItem().toString());
                                if (ind != -1) {
                                    ind1 = ind;
                                    cCode.setText(ST.getDept().getCourseList().get(ind).getCode());

                                    for (int i = 0; i < ST.getDept().getCourseList().get(ind).getSectionList().size(); i++) {
                                        sList.addItem(ST.getDept().getCourseList().get(ind).getSectionList().get(i).getName());
                                    }
                                }
                            }

                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_cListActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        //this.dispose();
        if (cList.getSelectedItem().toString().equals("Select Course 1") || sList.getSelectedItem().toString().equals("Select Section")
                || cList1.getSelectedItem().toString().equals("Select Course 2") || sList1.getSelectedItem().toString().equals("Select Section")
                || cList2.getSelectedItem().toString().equals("Select Course 3") || sList2.getSelectedItem().toString().equals("Select Section")
                || cList3.getSelectedItem().toString().equals("Select Course 4") || sList3.getSelectedItem().toString().equals("Select Section")
                || cList4.getSelectedItem().toString().equals("Select Course 1") || sList4.getSelectedItem().toString().equals("Select Section")) {
            JOptionPane.showMessageDialog(null, "Please enter all fields");
        } else {
            boolean b1 = false, b2 = false, b3 = false, b4 = false, b5 = false;
            int i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
            if (!d1.equals(d2) && (t1.compareTo(t2) != 0 || t1e.compareTo(t2e) != 0)) {
                if (!d1.equals(d3) && (t1.compareTo(t3) != 0  || t1e.compareTo(t3e) != 0)) {
                    if (!d1.equals(d4) && (t1.compareTo(t4) != 0  || t1e.compareTo(t4e) != 0)) {
                        if (!d1.equals(d5) && (t1.compareTo(t5) != 0  || t1e.compareTo(t5e) != 0)) {
                            b1 = true;
                        } else {
                            i1 = 5;
                        }
                    } else {
                        i1 = 4;
                    }
                } else {
                    i1 = 3;
                }
            } else {
                i1 = 2;
            }
            if (!d2.equals(d1) && (t2.compareTo(t1) != 0  || t2e.compareTo(t1e) != 0)) {
                if (!d2.equals(d3) && (t2.compareTo(t3) != 0  || t2e.compareTo(t3e) != 0)) {
                    if (!d2.equals(d4) && (t2.compareTo(t4) != 0  || t2e.compareTo(t4e) != 0)) {
                        if (!d2.equals(d5) && (t2.compareTo(t5) != 0  || t2e.compareTo(t5e) != 0)) {
                            b2 = true;
                        } else {
                            i2 = 5;
                        }
                    } else {
                        i2 = 4;
                    }
                } else {
                    i2 = 3;
                }
            } else {
                i2 = 1;
            }
            if (!d3.equals(d1) && (t3.compareTo(t1) != 0  || t3e.compareTo(t1e) != 0)) {
                if (!d3.equals(d2) && (t3.compareTo(t2) != 0 || t3e.compareTo(t2e) != 0)) {
                    if (!d3.equals(d4) && (t3.compareTo(t4) != 0 || t3e.compareTo(t4e) != 0)) {
                        if (!d3.equals(d5) && (t3.compareTo(t5) != 0 || t3e.compareTo(t5e) != 0)) {
                            b3 = true;
                        } else {
                            i3 = 5;
                        }
                    } else {
                        i3 = 4;
                    }
                } else {
                    i3 = 2;
                }
            } else {
                i3 = 1;
            }
            if (!d4.equals(d1) && (t4.compareTo(t1) != 0  || t4e.compareTo(t1e) != 0)) {
                if (!d4.equals(d2) && (t4.compareTo(t2) != 0  || t4e.compareTo(t2e) != 0)) {
                    if (!d4.equals(d3) && (t4.compareTo(t3) != 0  || t4e.compareTo(t3e) != 0)) {
                        if (!d4.equals(d5) && (t4.compareTo(t5) != 0  || t4e.compareTo(t5e) != 0)) {
                            b4 = true;
                        } else {
                            i4 = 5;
                        }
                    } else {
                        i4 = 3;
                    }
                } else {
                    i4 = 2;
                }
            } else {
                i4 = 1;
            }
            if (!d5.equals(d1) && (t5.compareTo(t1) != 0  || t5e.compareTo(t1e) != 0)) {
                if (!d5.equals(d2) && (t5.compareTo(t2) != 0  || t5e.compareTo(t2e) != 0)) {
                    if (!d5.equals(d3) && (t5.compareTo(t3) != 0  || t5e.compareTo(t3e) != 0)) {
                        if (!d5.equals(d4) && (t5.compareTo(t4) != 0 || t5e.compareTo(t4e) != 0)) {
                            b5 = true;
                        } else {
                            i5 = 4;
                        }
                    } else {
                        i5 = 3;
                    }
                } else {
                    i5 = 2;
                }
            } else {
                i5 = 1;
            }
            if (!b1) {
                if (i1 != 0) {
                    JOptionPane.showMessageDialog(null, "Section 1 has clash with timings and date of section " + (i1));
                }
            }
            if (!b2) {
                if (i2 != 0) {
                    JOptionPane.showMessageDialog(null, "Section 2 has clash with timings and date of section " + (i2));
                }
            }
            if (!b3) {
                if (i3 != 0) {
                    JOptionPane.showMessageDialog(null, "Section 3 has clash with timings and date of section " + (i3));
                }
            }
            if (!b4) {
                if (i4 != 0) {
                    JOptionPane.showMessageDialog(null, "Section 4 has clash with timings and date of section " + (i4));
                }
            }
            if (!b5) {
                if (i5 != 0) {
                    JOptionPane.showMessageDialog(null, "Section 5 has clash with timings and date of section " + (i5));
                }
            } 
            if (b1 && b2 && b3 && b4 && b5) {
                JOptionPane.showMessageDialog(null, "Your desired timetable is clashless");
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void sListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sListMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_sListMouseReleased

    private void sListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sListActionPerformed
        // TODO add your handling code here:
        timing.setText(" ");
        day.setText(" ");
        venue.setText(" ");

        if (sList.getSelectedItem() != null) {

            if (!sList.getSelectedItem().toString().equals("Select Section")) {

                for (int i = 0; i < ST.getDept().getCourseList().get(ind1).getSectionList().size(); i++) {
                    if (ST.getDept().getCourseList().get(ind1).getSectionList().get(i).getName().equals(sList.getSelectedItem().toString())) {

                        LocalTime lt = ST.getDept().getCourseList().get(ind1).getSectionList().get(i).getTime();
                        String secDay = "";

                        if (!cList.getSelectedItem().toString().contains(" Lab")) {
                            lt = lt.plusHours(1);
                            lt = lt.plusMinutes(30);

                            if (ST.getDept().getCourseList().get(ind1).getSectionList().get(i).getDay().equals("Monday")) {
                                secDay = ", Wednesday";
                            } else if (ST.getDept().getCourseList().get(ind1).getSectionList().get(i).getDay().equals("Tuesday")) {
                                secDay = ", Thursday";
                            } else if (ST.getDept().getCourseList().get(ind1).getSectionList().get(i).getDay().equals("Wednesday")) {
                                secDay = ", Friday";
                            }

                        } else {
                            lt = lt.plusHours(3);
                        }

                        timing.setText(ST.getDept().getCourseList().get(ind1).getSectionList().get(i).getTime().toString() + " - " + lt.toString());
                        day.setText(ST.getDept().getCourseList().get(ind1).getSectionList().get(i).getDay() + secDay);
                        venue.setText(ST.getDept().getCourseList().get(ind1).getSectionList().get(i).getRoom());
                        t1 = ST.getDept().getCourseList().get(ind1).getSectionList().get(i).getTime();
                        d1 = ST.getDept().getCourseList().get(ind1).getSectionList().get(i).getDay();
                        t1e = lt;

                        break;
                    }
                }
            }
        }

        //
    }//GEN-LAST:event_sListActionPerformed

    private void cList1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cList1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cList1MouseReleased

    private void cList1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cList1ActionPerformed
        // TODO add your handling code here:
        if (cList1.getSelectedItem() != null) {
            if (checkForSameCourse(cList1.getSelectedItem().toString()) && !s2_.equals(cList1.getSelectedItem().toString())) {
                JOptionPane.showMessageDialog(null, "You have selected two same courses");
            } else {
                if (cList1.getSelectedItem() != null) {
                    if (cList1.getSelectedItem().toString().equals("Select Course 2")) {
                        flag2 = false;
                        sList1.removeAllItems();
                        sList1.addItem("Select Section");
                        cCode1.setText(" ");
                        removeCourse_(s2_);
                        s2_ = "";
                    }
                    if (!cList1.getSelectedItem().toString().equals("Select Course 2")) {
                        if (!checkForSameCourse(cList1.getSelectedItem().toString()) && !flag2) {
                            flag2 = true;
                            s2_ = cList1.getSelectedItem().toString();
                            c_.add(cList1.getSelectedItem().toString());
                            int ind = findIndInCourseList(cList1.getSelectedItem().toString());
                            ind2 = ind;
                            cCode1.setText(ST.getDept().getCourseList().get(ind).getCode());

                            for (int i = 0; i < ST.getDept().getCourseList().get(ind).getSectionList().size(); i++) {
                                sList1.addItem(ST.getDept().getCourseList().get(ind).getSectionList().get(i).getName());
                            }
                        } else if (flag2 == true) {
                            if (!checkForSameCourse(cList1.getSelectedItem().toString()) && !s2_.equals(cList1.getSelectedItem().toString())) {
                                //JOptionPane.showMessageDialog(null, "You have selected two same courses");
                                sList1.removeAllItems();
                                sList1.addItem("Select Section");
                                cCode1.setText(" ");
                                removeCourse_(s2_);
                                c_.add(cList1.getSelectedItem().toString());
                                s2_ = cList1.getSelectedItem().toString();
                                int ind = findIndInCourseList(cList1.getSelectedItem().toString());
                                if (ind != -1) {
                                    ind2 = ind;
                                    cCode1.setText(ST.getDept().getCourseList().get(ind).getCode());

                                    for (int i = 0; i < ST.getDept().getCourseList().get(ind).getSectionList().size(); i++) {
                                        sList1.addItem(ST.getDept().getCourseList().get(ind).getSectionList().get(i).getName());
                                    }
                                }
                            }

                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_cList1ActionPerformed

    private void sList1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sList1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_sList1MouseReleased

    private void sList1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sList1ActionPerformed
        // TODO add your handling code here:
        timing1.setText(" ");
        day1.setText(" ");
        venue1.setText(" ");

        if (sList1.getSelectedItem() != null) {
            if (!sList1.getSelectedItem().toString().equals("Select Section")) {
                for (int i = 0; i < ST.getDept().getCourseList().get(ind2).getSectionList().size(); i++) {
                    if (ST.getDept().getCourseList().get(ind2).getSectionList().get(i).getName().equals(sList1.getSelectedItem().toString())) {

                        LocalTime lt = ST.getDept().getCourseList().get(ind2).getSectionList().get(i).getTime();
                        String secDay = "";

                        if (!cList1.getSelectedItem().toString().contains(" Lab")) {
                            lt = lt.plusHours(1);
                            lt = lt.plusMinutes(30);

                            if (ST.getDept().getCourseList().get(ind2).getSectionList().get(i).getDay().equals("Monday")) {
                                secDay = ", Wednesday";
                            } else if (ST.getDept().getCourseList().get(ind2).getSectionList().get(i).getDay().equals("Tuesday")) {
                                secDay = ", Thursday";
                            } else if (ST.getDept().getCourseList().get(ind2).getSectionList().get(i).getDay().equals("Wednesday")) {
                                secDay = ", Friday";
                            }

                        } else {
                            lt = lt.plusHours(3);
                        }

                        timing1.setText(ST.getDept().getCourseList().get(ind2).getSectionList().get(i).getTime().toString() + " - " + lt.toString());
                        day1.setText(ST.getDept().getCourseList().get(ind2).getSectionList().get(i).getDay() + secDay);
                        venue1.setText(ST.getDept().getCourseList().get(ind2).getSectionList().get(i).getRoom());

                        t2 = ST.getDept().getCourseList().get(ind2).getSectionList().get(i).getTime();
                        d2 = ST.getDept().getCourseList().get(ind2).getSectionList().get(i).getDay();
                        t2e = lt;
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_sList1ActionPerformed

    private void cList2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cList2MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cList2MouseReleased

    private void cList2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cList2ActionPerformed
        // TODO add your handling code here:
        if (cList2.getSelectedItem() != null) {
            if (checkForSameCourse(cList2.getSelectedItem().toString()) && !s3_.equals(cList2.getSelectedItem().toString())) {
                JOptionPane.showMessageDialog(null, "You have selected two same courses");
            } else {
                if (cList2.getSelectedItem() != null) {
                    if (cList2.getSelectedItem().toString().equals("Select Course 3")) {
                        flag3 = false;
                        sList2.removeAllItems();
                        sList2.addItem("Select Section");
                        cCode2.setText(" ");
                        removeCourse_(s3_);
                        s3_ = "";
                    }
                    if (!cList2.getSelectedItem().toString().equals("Select Course 3")) {
                        if (!checkForSameCourse(cList2.getSelectedItem().toString()) && !flag3) {
                            flag3 = true;
                            s3_ = cList2.getSelectedItem().toString();
                            c_.add(cList2.getSelectedItem().toString());
                            int ind = findIndInCourseList(cList2.getSelectedItem().toString());
                            ind3 = ind;
                            cCode2.setText(ST.getDept().getCourseList().get(ind).getCode());

                            for (int i = 0; i < ST.getDept().getCourseList().get(ind).getSectionList().size(); i++) {
                                sList2.addItem(ST.getDept().getCourseList().get(ind).getSectionList().get(i).getName());
                            }
                        } else if (flag1 == true) {
                            if (!checkForSameCourse(cList2.getSelectedItem().toString()) && !s3_.equals(cList2.getSelectedItem().toString())) {
                                //JOptionPane.showMessageDialog(null, "You have selected two same courses");
                                sList2.removeAllItems();
                                sList2.addItem("Select Section");
                                cCode2.setText(" ");
                                removeCourse_(s3_);
                                c_.add(cList2.getSelectedItem().toString());
                                s3_ = cList2.getSelectedItem().toString();
                                int ind = findIndInCourseList(cList2.getSelectedItem().toString());
                                if (ind != -1) {
                                    ind3 = ind;
                                    cCode2.setText(ST.getDept().getCourseList().get(ind).getCode());

                                    for (int i = 0; i < ST.getDept().getCourseList().get(ind).getSectionList().size(); i++) {
                                        sList2.addItem(ST.getDept().getCourseList().get(ind).getSectionList().get(i).getName());
                                    }
                                }
                            }

                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_cList2ActionPerformed

    private void sList2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sList2MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_sList2MouseReleased

    private void sList2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sList2ActionPerformed
        // TODO add your handling code here:
        timing2.setText(" ");
        day2.setText(" ");
        venue2.setText(" ");

        if (sList2.getSelectedItem() != null) {
            if (!sList2.getSelectedItem().toString().equals("Select Section")) {

                for (int i = 0; i < ST.getDept().getCourseList().get(ind3).getSectionList().size(); i++) {
                    if (ST.getDept().getCourseList().get(ind3).getSectionList().get(i).getName().equals(sList2.getSelectedItem().toString())) {

                        LocalTime lt = ST.getDept().getCourseList().get(ind3).getSectionList().get(i).getTime();
                        String secDay = "";

                        if (!cList2.getSelectedItem().toString().contains(" Lab")) {
                            lt = lt.plusHours(1);
                            lt = lt.plusMinutes(30);

                            if (ST.getDept().getCourseList().get(ind3).getSectionList().get(i).getDay().equals("Monday")) {
                                secDay = ", Wednesday";
                            } else if (ST.getDept().getCourseList().get(ind3).getSectionList().get(i).getDay().equals("Tuesday")) {
                                secDay = ", Thursday";
                            } else if (ST.getDept().getCourseList().get(ind3).getSectionList().get(i).getDay().equals("Wednesday")) {
                                secDay = ", Friday";
                            }

                        } else {
                            lt = lt.plusHours(3);
                        }

                        timing2.setText(ST.getDept().getCourseList().get(ind3).getSectionList().get(i).getTime().toString() + " - " + lt.toString());
                        day2.setText(ST.getDept().getCourseList().get(ind3).getSectionList().get(i).getDay() + secDay);
                        venue2.setText(ST.getDept().getCourseList().get(ind3).getSectionList().get(i).getRoom());

                        t3 = ST.getDept().getCourseList().get(ind3).getSectionList().get(i).getTime();
                        d3 = ST.getDept().getCourseList().get(ind3).getSectionList().get(i).getDay();
                        t3e = lt;
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_sList2ActionPerformed

    private void cList3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cList3MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cList3MouseReleased

    private void cList3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cList3ActionPerformed
        // TODO add your handling code here:
        if (cList3.getSelectedItem() != null) {
            if (checkForSameCourse(cList3.getSelectedItem().toString()) && !s4_.equals(cList3.getSelectedItem().toString())) {
                JOptionPane.showMessageDialog(null, "You have selected two same courses");
            } else {
                if (cList3.getSelectedItem() != null) {
                    if (cList3.getSelectedItem().toString().equals("Select Course 4")) {
                        flag4 = false;
                        sList3.removeAllItems();
                        sList3.addItem("Select Section");
                        cCode3.setText(" ");
                        removeCourse_(s4_);
                        s4_ = "";
                    }
                    if (!cList3.getSelectedItem().toString().equals("Select Course 4")) {
                        if (!checkForSameCourse(cList3.getSelectedItem().toString()) && !flag4) {
                            flag4 = true;
                            s4_ = cList3.getSelectedItem().toString();
                            c_.add(cList3.getSelectedItem().toString());
                            int ind = findIndInCourseList(cList3.getSelectedItem().toString());
                            ind4 = ind;
                            cCode3.setText(ST.getDept().getCourseList().get(ind).getCode());

                            for (int i = 0; i < ST.getDept().getCourseList().get(ind).getSectionList().size(); i++) {
                                sList3.addItem(ST.getDept().getCourseList().get(ind).getSectionList().get(i).getName());
                            }
                        } else if (flag4 == true) {
                            if (!checkForSameCourse(cList3.getSelectedItem().toString()) && !s4_.equals(cList3.getSelectedItem().toString())) {
                                //JOptionPane.showMessageDialog(null, "You have selected two same courses");
                                sList3.removeAllItems();
                                sList3.addItem("Select Section");
                                cCode3.setText(" ");
                                removeCourse_(s4_);
                                c_.add(cList3.getSelectedItem().toString());
                                s4_ = cList3.getSelectedItem().toString();
                                int ind = findIndInCourseList(cList3.getSelectedItem().toString());
                                if (ind != -1) {
                                    ind4 = ind;
                                    cCode3.setText(ST.getDept().getCourseList().get(ind).getCode());

                                    for (int i = 0; i < ST.getDept().getCourseList().get(ind).getSectionList().size(); i++) {
                                        sList3.addItem(ST.getDept().getCourseList().get(ind).getSectionList().get(i).getName());
                                    }
                                }
                            }

                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_cList3ActionPerformed

    private void sList3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sList3MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_sList3MouseReleased

    private void sList3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sList3ActionPerformed
        // TODO add your handling code here:
        timing3.setText(" ");
        day3.setText(" ");
        venue3.setText(" ");

        if (sList3.getSelectedItem() != null) {
            if (!sList3.getSelectedItem().toString().equals("Select Section")) {

                for (int i = 0; i < ST.getDept().getCourseList().get(ind4).getSectionList().size(); i++) {
                    if (ST.getDept().getCourseList().get(ind4).getSectionList().get(i).getName().equals(sList3.getSelectedItem().toString())) {

                        LocalTime lt = ST.getDept().getCourseList().get(ind4).getSectionList().get(i).getTime();
                        String secDay = "";

                        if (!cList3.getSelectedItem().toString().contains(" Lab")) {
                            lt = lt.plusHours(1);
                            lt = lt.plusMinutes(30);

                            if (ST.getDept().getCourseList().get(ind4).getSectionList().get(i).getDay().equals("Monday")) {
                                secDay = ", Wednesday";
                            } else if (ST.getDept().getCourseList().get(ind4).getSectionList().get(i).getDay().equals("Tuesday")) {
                                secDay = ", Thursday";
                            } else if (ST.getDept().getCourseList().get(ind4).getSectionList().get(i).getDay().equals("Wednesday")) {
                                secDay = ", Friday";
                            }

                        } else {
                            lt = lt.plusHours(3);
                        }

                        timing3.setText(ST.getDept().getCourseList().get(ind4).getSectionList().get(i).getTime().toString() + " - " + lt.toString());
                        day3.setText(ST.getDept().getCourseList().get(ind4).getSectionList().get(i).getDay() + secDay);
                        venue3.setText(ST.getDept().getCourseList().get(ind4).getSectionList().get(i).getRoom());

                        t4 = ST.getDept().getCourseList().get(ind4).getSectionList().get(i).getTime();
                        d4 = ST.getDept().getCourseList().get(ind4).getSectionList().get(i).getDay();
                        t4e = lt;
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_sList3ActionPerformed

    private void cList4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cList4MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cList4MouseReleased

    private void cList4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cList4ActionPerformed
        // TODO add your handling code here:
        if (cList4.getSelectedItem() != null) {
            if (checkForSameCourse(cList4.getSelectedItem().toString()) && !s5_.equals(cList4.getSelectedItem().toString())) {
                JOptionPane.showMessageDialog(null, "You have selected two same courses");
            } else {
                if (cList4.getSelectedItem() != null) {
                    if (cList4.getSelectedItem().toString().equals("Select Course 5")) {
                        flag5 = false;
                        sList4.removeAllItems();
                        sList4.addItem("Select Section");
                        cCode4.setText(" ");
                        removeCourse_(s5_);
                        s5_ = "";
                    }
                    if (!cList4.getSelectedItem().toString().equals("Select Course 5")) {
                        if (!checkForSameCourse(cList4.getSelectedItem().toString()) && !flag5) {
                            flag5 = true;
                            s5_ = cList4.getSelectedItem().toString();
                            c_.add(cList4.getSelectedItem().toString());
                            int ind = findIndInCourseList(cList4.getSelectedItem().toString());
                            ind5 = ind;
                            cCode4.setText(ST.getDept().getCourseList().get(ind).getCode());

                            for (int i = 0; i < ST.getDept().getCourseList().get(ind).getSectionList().size(); i++) {
                                sList4.addItem(ST.getDept().getCourseList().get(ind).getSectionList().get(i).getName());
                            }
                        } else if (flag5 == true) {
                            if (!checkForSameCourse(cList4.getSelectedItem().toString()) && !s5_.equals(cList4.getSelectedItem().toString())) {
                                //JOptionPane.showMessageDialog(null, "You have selected two same courses");
                                sList4.removeAllItems();
                                sList4.addItem("Select Section");
                                cCode4.setText(" ");
                                removeCourse_(s5_);
                                c_.add(cList4.getSelectedItem().toString());
                                s5_ = cList4.getSelectedItem().toString();
                                int ind = findIndInCourseList(cList4.getSelectedItem().toString());
                                if (ind != -1) {
                                    ind5 = ind;
                                    cCode4.setText(ST.getDept().getCourseList().get(ind).getCode());

                                    for (int i = 0; i < ST.getDept().getCourseList().get(ind).getSectionList().size(); i++) {
                                        sList4.addItem(ST.getDept().getCourseList().get(ind).getSectionList().get(i).getName());
                                    }
                                }
                            }

                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_cList4ActionPerformed

    private void sList4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sList4MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_sList4MouseReleased

    private void sList4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sList4ActionPerformed
        // TODO add your handling code here:
        timing4.setText(" ");
        day4.setText(" ");
        venue4.setText(" ");

        if (sList4.getSelectedItem() != null) {
            if (!sList4.getSelectedItem().toString().equals("Select Section")) {

                for (int i = 0; i < ST.getDept().getCourseList().get(ind5).getSectionList().size(); i++) {
                    if (ST.getDept().getCourseList().get(ind5).getSectionList().get(i).getName().equals(sList4.getSelectedItem().toString())) {

                        LocalTime lt = ST.getDept().getCourseList().get(ind5).getSectionList().get(i).getTime();
                        String secDay = "";

                        if (!cList4.getSelectedItem().toString().contains(" Lab")) {
                            lt = lt.plusHours(1);
                            lt = lt.plusMinutes(30);

                            if (ST.getDept().getCourseList().get(ind5).getSectionList().get(i).getDay().equals("Monday")) {
                                secDay = ", Wednesday";
                            } else if (ST.getDept().getCourseList().get(ind5).getSectionList().get(i).getDay().equals("Tuesday")) {
                                secDay = ", Thursday";
                            } else if (ST.getDept().getCourseList().get(ind5).getSectionList().get(i).getDay().equals("Wednesday")) {
                                secDay = ", Friday";
                            }

                        } else {
                            lt = lt.plusHours(3);
                        }

                        timing4.setText(ST.getDept().getCourseList().get(ind5).getSectionList().get(i).getTime().toString() + " - " + lt.toString());
                        day4.setText(ST.getDept().getCourseList().get(ind5).getSectionList().get(i).getDay() + secDay);
                        venue4.setText(ST.getDept().getCourseList().get(ind5).getSectionList().get(i).getRoom());

                        t5 = ST.getDept().getCourseList().get(ind5).getSectionList().get(i).getTime();
                        d5 = ST.getDept().getCourseList().get(ind5).getSectionList().get(i).getDay();
                        t5e = lt;
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_sList4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[], Student st) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectCoursesAndSections.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectCoursesAndSections.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectCoursesAndSections.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectCoursesAndSections.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SelectCoursesAndSections(st).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cCode;
    private javax.swing.JLabel cCode1;
    private javax.swing.JLabel cCode2;
    private javax.swing.JLabel cCode3;
    private javax.swing.JLabel cCode4;
    private javax.swing.JComboBox<String> cList;
    private javax.swing.JComboBox<String> cList1;
    private javax.swing.JComboBox<String> cList2;
    private javax.swing.JComboBox<String> cList3;
    private javax.swing.JComboBox<String> cList4;
    private javax.swing.JLabel day;
    private javax.swing.JLabel day1;
    private javax.swing.JLabel day2;
    private javax.swing.JLabel day3;
    private javax.swing.JLabel day4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> sList;
    private javax.swing.JComboBox<String> sList1;
    private javax.swing.JComboBox<String> sList2;
    private javax.swing.JComboBox<String> sList3;
    private javax.swing.JComboBox<String> sList4;
    private javax.swing.JLabel timing;
    private javax.swing.JLabel timing1;
    private javax.swing.JLabel timing2;
    private javax.swing.JLabel timing3;
    private javax.swing.JLabel timing4;
    private javax.swing.JLabel venue;
    private javax.swing.JLabel venue1;
    private javax.swing.JLabel venue2;
    private javax.swing.JLabel venue3;
    private javax.swing.JLabel venue4;
    // End of variables declaration//GEN-END:variables
}
